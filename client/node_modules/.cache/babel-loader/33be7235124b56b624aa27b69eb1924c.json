{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elisa\\\\WebstormProjects\\\\mandatory_do_together - mongoose\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { Router } from \"@reach/router\";\nimport Questions from \"./Questions\";\nimport Question from \"./Question\";\nimport AskQuestion from \"./AskQuestion\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props); // This is my state data initialized\n\n    this.API_URL = process.env.REACT_APP_API_URL;\n    this.state = {\n      questions: []\n    };\n  }\n\n  componentDidMount() {\n    this.getQuestions().then(() => console.log(\"questions have been gotten\"));\n  }\n\n  async getQuestions() {\n    let url = \"\".concat(this.API_URL, \"/questions\");\n    let result = await fetch(url); //get the data\n\n    let json = await result.json(); //turn data into JSON\n\n    return this.setState({\n      questions: json //set it in the state\n\n    });\n  }\n\n  getQuestion(id) {\n    //find question by id\n    return this.state.questions.find(q => q._id === id);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"QA Website\"), React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Questions, {\n      path: \"/\",\n      questions: this.state.questions\n      /* askQuestion={(text) => this.askQuestion(text)}*/\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(Question, {\n      path: \"/question/:id\",\n      getQuestion: id => this.getQuestion(id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(AskQuestion, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\Elisa\\WebstormProjects\\mandatory_do_together - mongoose\\client\\src\\App.js"],"names":["React","Component","Router","Questions","Question","AskQuestion","App","constructor","props","API_URL","process","env","REACT_APP_API_URL","state","questions","componentDidMount","getQuestions","then","console","log","url","result","fetch","json","setState","getQuestion","id","find","q","_id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAGxBM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AAHe,SADnBC,OACmB,GADTC,OAAO,CAACC,GAAR,CAAYC,iBACH;AAIf,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL,GAAoBC,IAApB,CAAyB,MAAMC,OAAO,CAACC,GAAR,CAAY,4BAAZ,CAA/B;AACH;;AAED,QAAMH,YAAN,GAAqB;AACjB,QAAII,GAAG,aAAM,KAAKX,OAAX,eAAP;AACA,QAAIY,MAAM,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAxB,CAFiB,CAEc;;AAC/B,QAAIG,IAAI,GAAG,MAAMF,MAAM,CAACE,IAAP,EAAjB,CAHiB,CAGe;;AAChC,WAAO,KAAKC,QAAL,CAAc;AACjBV,MAAAA,SAAS,EAAES,IADM,CACD;;AADC,KAAd,CAAP;AAGH;;AAGDE,EAAAA,WAAW,CAACC,EAAD,EAAI;AACX;AACA,WAAO,KAAKb,KAAL,CAAWC,SAAX,CAAqBa,IAArB,CAA0BC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,EAAzC,CAAP;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAC,GAAhB;AAAoB,MAAA,SAAS,EAAE,KAAKjB,KAAL,CAAWC;AACvC;AADH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAKI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,eAAf;AACU,MAAA,WAAW,EAAEY,EAAE,IAAI,KAAKD,WAAL,CAAiBC,EAAjB,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAFJ,EAWI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAeH;;AA9CuB;;AAiD5B,eAAepB,GAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Router } from \"@reach/router\";\r\n\r\nimport Questions from \"./Questions\";\r\nimport Question from \"./Question\";\r\nimport AskQuestion from \"./AskQuestion\";\r\n\r\nclass App extends Component {\r\n\r\n    API_URL = process.env.REACT_APP_API_URL;\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // This is my state data initialized\r\n        this.state = {\r\n            questions: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.getQuestions().then(() => console.log(\"questions have been gotten\"));\r\n    }\r\n\r\n    async getQuestions() {\r\n        let url = `${this.API_URL}/questions`;\r\n        let result = await fetch(url); //get the data\r\n        let json = await result.json(); //turn data into JSON\r\n        return this.setState({\r\n            questions: json //set it in the state\r\n        })\r\n    }\r\n\r\n\r\n    getQuestion(id){\r\n        //find question by id\r\n        return this.state.questions.find(q => q._id === id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <h1>QA Website</h1>\r\n                <Router>\r\n\r\n                    <Questions path=\"/\" questions={this.state.questions}\r\n                       /* askQuestion={(text) => this.askQuestion(text)}*/>\r\n                    </Questions>\r\n                    <Question path=\"/question/:id\"\r\n                              getQuestion={id => this.getQuestion(id)}></Question>\r\n\r\n                </Router>\r\n                <AskQuestion></AskQuestion>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}